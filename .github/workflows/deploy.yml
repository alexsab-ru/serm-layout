# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy website to Pages

on:
  workflow_run:
    workflows: ["Generate Jekyll Files from XML"]  # Замените на имя вашего рабочего процесса update_cars
    types:
      - completed
  # Runs on pushes targeting the default branch
  push:
    branches: ["master", "main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check for new commits
        id: check_changes
        run: |
          # Получите количество коммитов за последние 10 минут
          COUNT=$(git log --since="10 minutes ago" --pretty=oneline | wc -l)
          if [ "$COUNT" -eq "0" ]; then
            echo "No new commits. Exiting workflow." && echo "changes=false" >> $GITHUB_ENV && echo "changes=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Something found." && echo "changes=true" >> $GITHUB_ENV && echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Pages
        id: pages
        if: env.changes == 'true'
        uses: actions/configure-pages@v3

      - name: Build Astro
        if: env.changes == 'true'
        run: |
          npm install -g pnpm
          pnpm install --no-frozen-lockfile
          pnpm build --outDir ./_site

      - name: Upload artifact
        if: env.changes == 'true'
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2

    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.changes == 'true'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  notify_telegram:
    needs: deploy
    if: needs.build.outputs.changes == 'true'
    uses: ./.github/workflows/github-telegram.yml
    with:
      additional-text: 'After deploy'
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
